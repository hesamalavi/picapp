{"ast":null,"code":"var _jsxFileName = \"/Users/hesamalavi/Documents/react-projects/picapp/src/comps/UploadForm.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport ProgressBar from './ProgressBar';\n\nconst UploadForm = () => {\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n  const types = ['image/png', 'image/jpeg', 'image/jpg'];\n\n  const changeHandler = e => {\n    let selected = e.target.files[0]; // check for type of file\n\n    if (selected && types.includes(selected.type)) {\n      setFile(selected);\n      setError('');\n    } else {\n      setFile(null);\n      setError('Please select an image file (png or jpeg)');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"output\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 27\n    }\n  }, error), file && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 26\n    }\n  }, file.name), file && /*#__PURE__*/React.createElement(ProgressBar, {\n    file: file,\n    setFile: setFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 26\n    }\n  })));\n};\n\nexport default UploadForm;","map":{"version":3,"sources":["/Users/hesamalavi/Documents/react-projects/picapp/src/comps/UploadForm.js"],"names":["React","useState","ProgressBar","UploadForm","file","setFile","error","setError","types","changeHandler","e","selected","target","files","includes","type","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMO,KAAK,GAAG,CAAC,WAAD,EAAc,YAAd,EAA4B,WAA5B,CAAd;;AACA,QAAMC,aAAa,GAAIC,CAAD,IAAO;AACzB,QAAIC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAf,CADyB,CAEzB;;AACA,QAAIF,QAAQ,IAAIH,KAAK,CAACM,QAAN,CAAeH,QAAQ,CAACI,IAAxB,CAAhB,EAA+C;AAC3CV,MAAAA,OAAO,CAACM,QAAD,CAAP;AACAJ,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,KAHD,MAGO;AACHF,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,MAAAA,QAAQ,CAAC,2CAAD,CAAR;AACH;AACJ,GAVD;;AAWA,sBACI;AAAM,IAAA,MAAM,EAAC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAEE,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,KAAK,iBAAI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBA,KAAxB,CADd,EAEKF,IAAI,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,IAAI,CAACY,IAAX,CAFb,EAGKZ,IAAI,iBAAI,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEA,IAAnB;AAAyB,IAAA,OAAO,EAAEC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHb,CAFJ,CADJ;AAUH,CA1BD;;AA4BA,eAAeF,UAAf","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport ProgressBar from './ProgressBar';\n\nconst UploadForm = () => {\n    const [file, setFile] = useState(null);\n    const [error, setError] = useState(null);\n\n    const types = ['image/png', 'image/jpeg', 'image/jpg'];\n    const changeHandler = (e) => {\n        let selected = e.target.files[0];\n        // check for type of file\n        if (selected && types.includes(selected.type)) {\n            setFile(selected);\n            setError('');\n        } else {\n            setFile(null);\n            setError('Please select an image file (png or jpeg)');\n        }\n    };\n    return (\n        <form action=\"\">\n            <input type=\"file\" onChange={changeHandler} />\n            <div className=\"output\">\n                {error && <div className=\"error\">{error}</div>}\n                {file && <div>{file.name}</div>}\n                {file && <ProgressBar file={file} setFile={setFile} />}\n            </div>\n        </form>\n    );\n};\n\nexport default UploadForm;\n"]},"metadata":{},"sourceType":"module"}