{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { projectStorage, projectFirestore } from '../firebase/config'; // file that user selects, and upload file\n\nconst useStorage = file => {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n  useEffect(() => {\n    // references\n    const storageRef = projectStorage.ref(file.name);\n    const collectionRef = projectFirestore;\n    storageRef.put(file).on('state_changed,', snap => {\n      let percentage = snap.bytesTransferred / snap.totalBytes * 100;\n      setProgress(percentage);\n    }, err => {\n      setError(err);\n    }, async () => {\n      const url = await storageRef.getDownloadURL();\n      setUrl(url);\n    });\n  }, [file]);\n  return {\n    progress,\n    url,\n    error\n  };\n};\n\nexport default useStorage;","map":{"version":3,"sources":["/Users/hesamalavi/Documents/react-projects/picapp/src/hooks/useStorage.js"],"names":["useState","useEffect","projectStorage","projectFirestore","useStorage","file","progress","setProgress","error","setError","url","setUrl","storageRef","ref","name","collectionRef","put","on","snap","percentage","bytesTransferred","totalBytes","err","getDownloadURL"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,oBAAjD,C,CAEA;;AACA,MAAMC,UAAU,GAAIC,IAAD,IAAU;AACzB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,IAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,UAAMW,UAAU,GAAGV,cAAc,CAACW,GAAf,CAAmBR,IAAI,CAACS,IAAxB,CAAnB;AACA,UAAMC,aAAa,GAAGZ,gBAAtB;AAEAS,IAAAA,UAAU,CAACI,GAAX,CAAeX,IAAf,EAAqBY,EAArB,CACI,gBADJ,EAEKC,IAAD,IAAU;AACN,UAAIC,UAAU,GACTD,IAAI,CAACE,gBAAL,GAAwBF,IAAI,CAACG,UAA9B,GAA4C,GADhD;AAEAd,MAAAA,WAAW,CAACY,UAAD,CAAX;AACH,KANL,EAOKG,GAAD,IAAS;AACLb,MAAAA,QAAQ,CAACa,GAAD,CAAR;AACH,KATL,EAUI,YAAY;AACR,YAAMZ,GAAG,GAAG,MAAME,UAAU,CAACW,cAAX,EAAlB;AACAZ,MAAAA,MAAM,CAACD,GAAD,CAAN;AACH,KAbL;AAeH,GApBQ,EAoBN,CAACL,IAAD,CApBM,CAAT;AAqBA,SAAO;AAAEC,IAAAA,QAAF;AAAYI,IAAAA,GAAZ;AAAiBF,IAAAA;AAAjB,GAAP;AACH,CA3BD;;AA6BA,eAAeJ,UAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport { projectStorage, projectFirestore } from '../firebase/config';\n\n// file that user selects, and upload file\nconst useStorage = (file) => {\n    const [progress, setProgress] = useState(0);\n    const [error, setError] = useState(null);\n    const [url, setUrl] = useState(null);\n\n    useEffect(() => {\n        // references\n        const storageRef = projectStorage.ref(file.name);\n        const collectionRef = projectFirestore;\n\n        storageRef.put(file).on(\n            'state_changed,',\n            (snap) => {\n                let percentage =\n                    (snap.bytesTransferred / snap.totalBytes) * 100;\n                setProgress(percentage);\n            },\n            (err) => {\n                setError(err);\n            },\n            async () => {\n                const url = await storageRef.getDownloadURL();\n                setUrl(url);\n            }\n        );\n    }, [file]);\n    return { progress, url, error };\n};\n\nexport default useStorage;\n"]},"metadata":{},"sourceType":"module"}